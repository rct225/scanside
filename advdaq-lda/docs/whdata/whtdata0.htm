<!-- saved from url=(0014)about:internet -->
<html>
<head>

<meta name="generator" content="Adobe RoboHelp - www.adobe.com">
<meta name="description" content="WebHelp 5.50">
</head>
<body>
<script language="javascript" src="whtdata.js"></script>
<script language="javascript">
<!--
 aTE(1,2,"Welcome to Advantech DAQ Device Linux Driver","before/Welcome.htm");
   aTE(2,0,"About This Manual","before/aboutmanual.htm");
   aTE(2,0,"Organization of This Manual","before/organization.htm");
 aTE(1,3,"Advantech Device Driver Overview","Introduction/aboutdriver.htm");
   aTE(2,0,"Steps on Programming with Advantech DAQ Device Linux Driver","Introduction/guide.htm");
   aTE(2,0,"Installing Advantech DAQ Device Linux Driver","Introduction/install.htm");
   aTE(2,0,"Configure Devices with Advantech DAQ Device Manager Utilities","Introduction/devmgr.htm");
 aTE(1,4,"Getting Started with Advantech DAQ Device Linux Driver","tutorial/programming.htm");
   aTE(1,3,"A simple Example");
     aTE(2,0,"Create a new Application","tutorial/SimpleExample/emptyproject.htm");
     aTE(2,0,"Compiling","tutorial/SimpleExample/addfiles.htm");
     aTE(2,0,"Running","tutorial/SimpleExample/writingcodes.htm");
 aTE(1,58,"Advantech DAQ Device Linux Driver Programming Examples","examples/programmingexamples.htm");
   aTE(1,57,"Example Support List","examples/index.htm");
     aTE(1,37,"PCI Series");
       aTE(2,0,"PCI-1710/U Series","examples/PCI1710.htm");
       aTE(2,0,"PCI-1711/L/U/UL","examples/PCI1711.htm");
       aTE(2,0,"PCI-1712/L","examples/PCI1712.htm");
       aTE(2,0,"PCI-1713/U","examples/PCI1713.htm");
       aTE(2,0,"PCI-1714","examples/PCI1714.htm");
       aTE(2,0,"PCI-1715U","examples/PCI1715.htm");
       aTE(2,0,"PCI-1716/L","examples/PCI1716.htm");
       aTE(2,0,"PCI-1718HD/GU","examples/PCI1718.htm");
       aTE(2,0,"PCI-1720","examples/PCI1720.htm");
       aTE(2,0,"PCI-1721","examples/PCI1721.htm");
       aTE(2,0,"PCI-1723","examples/PCI1723.htm");
       aTE(2,0,"PCI-1724","examples/PCI1724.htm");
       aTE(2,0,"PCI-1727U","examples/PCI1727U.htm");
       aTE(2,0,"PCI-1730","examples/PCI1730.htm");
       aTE(2,0,"PCI-1733","examples/PCI1733.htm");
       aTE(2,0,"PCI-1734","examples/PCI1734.htm");
       aTE(2,0,"PCI-1735U","examples/PCI1735U.htm");
       aTE(2,0,"PCI-1736UP","examples/PCI1736.htm");
       aTE(2,0,"PCI-1737U","examples/PCI1737U.htm");
       aTE(2,0,"PCI-1739U","examples/PCI1739U.htm");
       aTE(2,0,"PCI-1741U","examples/PCI1741U.htm");
       aTE(2,0,"PCI-1742U","examples/PCI1742U.htm");
       aTE(2,0,"PCI-1747","examples/PCI1747.htm");
       aTE(2,0,"PCI-1750","examples/PCI1750.htm");
       aTE(2,0,"PCI-1751","examples/PCI1751.htm");
       aTE(2,0,"PCI-1752","examples/PCI1752.htm");
       aTE(2,0,"PCI-1753","examples/PCI1753.htm");
       aTE(2,0,"PCI-1754","examples/PCI1754.htm");
       aTE(2,0,"PCI-1756","examples/PCI1756.htm");
       aTE(2,0,"PCI-1757UP","examples/PCI1757UP.htm");
       aTE(2,0,"PCI-1758","examples/PCI1758U.htm");
       aTE(2,0,"PCI-1760","examples/PCI1760.htm");
       aTE(2,0,"PCI-1761","examples/PCI1761.htm");
       aTE(2,0,"PCI-1762","examples/PCI1762.htm");
       aTE(2,0,"PCI-1763UP","examples/PCI1763.HTM");
       aTE(2,0,"PCI-1780","examples/PCI1780.htm");
       aTE(2,0,"PCI-1784/U","examples/PCI1784.htm");
     aTE(1,8,"USB Series");
       aTE(2,0,"USB-4711/A","examples/USB4711.htm");
       aTE(2,0,"UAB-4702","examples/USB4702.htm");
       aTE(2,0,"UAB-4704","examples/USB4704.htm");
       aTE(2,0,"UAB-4716","examples/USB4716.htm");
       aTE(2,0,"USB-4718","examples/USB4718.htm");
       aTE(2,0,"USB-4750","examples/USB4750.htm");
       aTE(2,0,"USB-4751","examples/USB4751.htm");
       aTE(2,0,"USB-4761","examples/USB4761.htm");
     aTE(1,7,"PCM Series");
       aTE(2,0,"PCM-3718","examples/PCM3718.htm");
       aTE(2,0,"PCM-3724","examples/PCM3724.htm");
       aTE(2,0,"PCM-3725","examples/PCM3725.htm");
       aTE(2,0,"PCM-3730","examples/PCM3730.htm");
       aTE(2,0,"PCM-3730I","examples/PCM3730I.htm");
       aTE(2,0,"PCM-3753I","examples/PCM3753I.htm");
       aTE(2,0,"PCM-3761I","examples/PCM3761I.htm");
     aTE(1,1,"MIC Series");
       aTE(2,0,"MIC-3751","examples/MIC3751.htm");
 aTE(1,1,"Function Reference","function/funcoverview.htm");
 aTE(8,0,"Function Reference","whtdata1.htm","function/funcoverview.htm");
 aTE(1,1,"Appendix");
   aTE(2,0,"A: Gain Code","appendix/gaincodes.htm");
 aTE(1,1,"PCI Series");
 aTE(8,0,"PCI Series","whtdata2.htm");
 aTE(1,1,"USB Series");
 aTE(8,0,"USB Series","whtdata3.htm");
 aTE(1,70,"MIC Series");
   aTE(1,69,"MIC-3751 Device Driver User Manual","MIC/MIC-3751/cover.htm");
     aTE(1,1,"Device Introduction");
       aTE(2,0,"Device Features","MIC/MIC-3751/features/keyfeature.htm");
     aTE(1,1,"Demo and Test Examples");
       aTE(2,0,"Example Description","examples/PCI1751.htm");
     aTE(1,28,"Function Description","MIC/MIC-3751/Function/funcdesc.htm");
       aTE(1,4,"Device Functions");
         aTE(2,0,"DRV_DeviceOpen","function/Device/DRV_DEVICEOPEN.htm");
         aTE(2,0,"DRV_DeviceClose","function/Device/DRV_DEVICECLOSE.htm");
         aTE(2,0,"DRV_DeviceSetProperty","function/Device/drv_devicesetproperty.htm");
         aTE(2,0,"DRV_DeviceGetProperty","function/Device/drv_devicegetproperty.htm");
       aTE(1,4,"Port I/O Functions");
         aTE(2,0,"DRV_ReadPortByte","function/PORTIO/DRV_ReadPortByte.htm");
         aTE(2,0,"DRV_WritePortByte","function/PORTIO/DRV_WritePortByte.htm");
         aTE(2,0,"DRV_ReadPortWord","function/PORTIO/DRV_ReadPortWord.htm");
         aTE(2,0,"DRV_WritePortWord","function/PORTIO/DRV_WritePortWord.htm");
       aTE(1,3,"Digital Input/Output");
         aTE(2,0,"DRV_DioReadDIPorts","function/DIO/DRV_DioReadDiPorts.htm");
         aTE(2,0,"DRV_DioWriteDOPorts","function/DIO/DRV_DioWriteDoPorts.htm");
         aTE(2,0,"DRV_DioReadDOPorts","function/DIO/DRV_DioReadDOPorts.htm");
       aTE(1,7,"Counter Functions");
         aTE(2,0,"DRV_CounterEventStart","function/counter/DRV_CounterEventStart.htm");
         aTE(2,0,"DRV_CounterEventRead","function/counter/DRV_CounterEventRead.htm");
         aTE(2,0,"DRV_CounterFreqStart","function/counter/DRV_CounterFreqStart.htm");
         aTE(2,0,"DRV_CounterFreqRead","function/counter/DRV_CounterFreqRead.htm");
         aTE(2,0,"DRV_CounterPulseStart","function/counter/DRV_CounterPulseStart.htm");
         aTE(2,0,"DRV_CounterReset","function/counter/DRV_CounterReset.htm");
         aTE(2,0,"DRV_TimerCountSetting","function/counter/DRV_TimerCountSetting.htm");
       aTE(1,3,"High-speed Functions");
         aTE(1,2,"Common Functions");
           aTE(2,0,"DRV_CheckEvent","function/commonhighspeed/DRV_CheckEvent.htm");
           aTE(2,0,"DRV_EnableEvent","function/commonhighspeed/DRV_EnableEvent.htm");
       aTE(1,1,"Other Functions");
         aTE(2,0,"DRV_GetErrorMessage","function/others/DRV_GetErrorMessage.htm");
     aTE(1,16,"Data Structures","MIC/MIC-3751/structure/datastructure.htm");
       aTE(1,4,"Port I/O Functions");
         aTE(2,0,"PT_ReadPortByte","structure/PORTIO/PT_ReadPortByte.htm");
         aTE(2,0,"PT_WritePortByte","structure/PORTIO/PT_WritePortByte.htm");
         aTE(2,0,"PT_ReadPortWord","structure/PORTIO/PT_ReadPortWord.htm");
         aTE(2,0,"PT_WritePortWord","structure/PORTIO/PT_WritePortWord.htm");
       aTE(1,6,"Counter Functions");
         aTE(2,0,"PT_CounterEventStart","structure/counter/PT_CounterEventStart.htm");
         aTE(2,0,"PT_CounterEventRead","structure/counter/PT_CounterEventRead.htm");
         aTE(2,0,"PT_CounterFreqStart","structure/counter/PT_CounterFreqStart.htm");
         aTE(2,0,"PT_CounterFreqRead","structure/counter/PT_CounterFreqRead.htm");
         aTE(2,0,"PT_CounterPulseStart","structure/counter/PT_CounterPulseStart.htm");
         aTE(2,0,"PT_TimerCountSetting","structure/counter/PT_TimerCountSetting.htm");
       aTE(1,3,"High-speed Functions");
         aTE(1,2,"Common Functions");
           aTE(2,0,"PT_CheckEvent","structure/commonhighspeed/PT_CheckEvent.htm");
           aTE(2,0,"PT_EnableEvent","structure/commonhighspeed/PT_EnableEvent.htm");
     aTE(1,1,"Device Event");
       aTE(2,0,"Event Type","MIC/MIC-3751/Eventtype/Eventtype.htm");
     aTE(1,14,"Device Properties","MIC/MIC-3751/property/Deviceproperty.htm");
       aTE(2,0,"CFG_BoardID","MIC/MIC-3751/property/CFG_BoardID.htm");
       aTE(2,0,"CFG_BaseAddress","MIC/MIC-3751/property/CFG_BaseAddress.htm");
       aTE(2,0,"CFG_Interrupt","MIC/MIC-3751/property/CFG_Interrupt.htm");
       aTE(2,0,"CFG_BusNumber","MIC/MIC-3751/property/CFG_BusNumber.htm");
       aTE(2,0,"CFG_SlotNumber","MIC/MIC-3751/property/CFG_SlotNumber.htm");
       aTE(2,0,"CFG_CascadeMode","MIC/MIC-3751/property/CFG_CascadeMode.htm");
       aTE(2,0,"CFG_DioChannelDirection","MIC/MIC-3751/property/CFG_DioChannelDirection.htm");
       aTE(2,0,"CFG_DoPortCount","MIC/MIC-3751/property/CFG_DoPortCount.htm");
       aTE(2,0,"CFG_DiPortCount","MIC/MIC-3751/property/CFG_DiPortCount.htm");
       aTE(2,0,"CFG_DiChannelCount","MIC/MIC-3751/property/CFG_DiChannelCount.htm");
       aTE(2,0,"CFG_DoChannelCount","MIC/MIC-3751/property/CFG_DoChannelCount.htm");
       aTE(2,0,"CFG_InterruptTriggerSource","MIC/MIC-3751/property/CFG_InterruptTriggerSource.htm");
       aTE(2,0,"CFG_DiInterruptTriggerOnFallingEdge","MIC/MIC-3751/property/CFG_DiInterruptTriggerOnFallingEdge.htm");
       aTE(2,0,"CFG_DiInterruptTriggerOnRisingEdge","MIC/MIC-3751/property/CFG_DiInterruptTriggerOnRisingEdge.htm");
     aTE(1,1,"Error Codes","errorcodes/errorcodes.htm");
       aTE(2,0,"Error Codes","errorcodes/ERRORLIST.htm");
 aTE(1,1,"PCM Series");
 aTE(8,0,"PCM Series","whtdata4.htm");

//-->
</script>
</body>
</html>
